// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Guest {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bookings  Booking[]
}

model SafariPackage {
  id        Int      @id @default(autoincrement())
  slug      String   @unique
  name      String   
  description String?
  basePrice Decimal  @db.decimal(10,2)
  durationMin Int
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  departures Departure[]
}

model Departure {
  id        Int      @id @default(autoincrement())
  packageId Int
  startTime DateTime
  capacity  Int
  reserved  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

  package   SafariPackage @relation(fields: [packageId], references[id])
  bookings  Booking[]

model Booking {
  id            Int        @id @default(autoincrement())
  guestId       Int
  departureId   Int
  participants  Int
  totalPrice    Decimal    @db.Decimal(10,2)
  status        String     @default("confirmed")
  notes         String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  guest         Guest       @relation(fields: [guestId], references: [id])
  departure     Departure   @relation(fields: [departureId], references: [id])

  @@index([guestId])
  @@index([departureId])
}


